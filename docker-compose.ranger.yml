version: '3'
services:
  ranger:
    build:
      context: .
      dockerfile: Dockerfile.ranger
      args:
        - RANGER_VERSION=${RANGER_VERSION}
        - RANGER_DB_TYPE=${RANGER_DB_TYPE}
    image: ranger:latest
    container_name: ranger
    hostname: ranger.example.com
    stdin_open: true
    tty: true
    networks:
      - ranger
    ports:
      - "6080:6080"
    depends_on:
      ranger-zk:
        condition: service_started
      ranger-db:
        condition: service_healthy
    environment:
      - RANGER_VERSION
      - RANGER_DB_TYPE
    command:
      - /home/ranger/scripts/ranger.sh
    volumes:
      - ./scripts/ranger-admin-install-postgres.properties:/opt/ranger/ranger-3.0.0-SNAPSHOT-admin/install.properties
      - ./scripts/ranger-admin-install-postgres.properties:/opt/ranger/admin/install.properties

  ranger-zk:
    build:
      context: .
      dockerfile: Dockerfile.ranger-zk
    image: ranger-zk
    container_name: ranger-zk
    hostname: ranger-zk.example.com
    networks:
      - ranger
    ports:
      - "2181:2181"

  ranger-solr:
    build:
      context: .
      dockerfile: Dockerfile.ranger-solr
    image: ranger-solr
    container_name: ranger-solr
    hostname: ranger-solr.example.com
    networks:
      - ranger
    ports:
      - "8983:8983"
    command:
      - solr-precreate
      - ranger_audits
      - /opt/solr/server/solr/configsets/ranger_audits/

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
  #   container_name: es01
  #   hostname: es01
  #   environment:
  #     discovery.type: single-node
  #     xpack.security.enabled: "false"
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - ranger
  #   volumes:
  #   - ranger-es-data:/usr/share/elasticsearch/data

networks:
  ranger:
    name: rangernw

volumes:
  ranger-es-data: